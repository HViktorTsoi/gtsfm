[{"C:\\Users\\adisi\\Desktop\\React-Three-Fiber\\rtf-intro\\src\\index.js":"1","C:\\Users\\adisi\\Desktop\\React-Three-Fiber\\rtf-intro\\src\\App.js":"2","C:\\Users\\adisi\\Desktop\\React-Three-Fiber\\rtf-intro\\src\\reportWebVitals.js":"3","C:\\Users\\adisi\\Desktop\\Georgia Tech\\Spring 2021\\SfM Research\\gtsfm\\rtf_vis_tool\\src\\index.js":"4","C:\\Users\\adisi\\Desktop\\Georgia Tech\\Spring 2021\\SfM Research\\gtsfm\\rtf_vis_tool\\src\\reportWebVitals.js":"5","C:\\Users\\adisi\\Desktop\\Georgia Tech\\Spring 2021\\SfM Research\\gtsfm\\rtf_vis_tool\\src\\App.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":3104,"mtime":1610902653536,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":3683,"mtime":1611721703970,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1wmx23r",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lfpqkh",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\adisi\\Desktop\\React-Three-Fiber\\rtf-intro\\src\\index.js",[],["30","31"],"C:\\Users\\adisi\\Desktop\\React-Three-Fiber\\rtf-intro\\src\\App.js",["32","33","34"],"import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport {Canvas} from \"react-three-fiber\";\nimport {OrbitControls, Line, Html} from \"drei\";\n\nconst App = (props) => {\n  const [pointCloud, setPointCloud] = useState([]);\n\n  //Function\n  const getGridLines = () => {\n    var coordPairSet = []\n    //add x grid lines\n    for (var z = -50; z <= 50; z++) {\n      coordPairSet.push([[-50, 0, z], [50, 0, z]]);\n    }\n    //add z grid lines\n    for (var x = -50; x <= 50; x++) {\n      coordPairSet.push([[x, 0, -50], [x, 0, 50]]);\n    }\n\n    var finalLineGridSet = []\n    coordPairSet.map(coordPair => {\n      finalLineGridSet.push(<Line points={coordPair} color=\"black\" position={[0,0,0]} lineWidth={0.1}/>);\n    });\n    return finalLineGridSet;\n  }\n\n  //Component\n  const PointMesh = ({position, size, color, label}) => {\n    return (\n      <mesh position={position}>\n        <sphereBufferGeometry attach='geometry' args={size} />\n        <meshStandardMaterial attach='material' color={color}/>\n\n        <Html scaleFactor={50} position={[1,0.5,0]}>\n          <div class=\"content\">\n            {label}\n          </div>\n        </Html>\n\n      </mesh>\n    )\n  }\n\n  //Component\n  const CoordinateGrid = () => { \n    return (\n      <mesh>\n          <Line \n            points={[[-50,0,0], [50,0,0]]} \n            color=\"red\" \n            position={[0,0,0]}\n            lineWidth={0.3}\n          />\n          <Line \n            points={[[0,-50,0], [0,50,0]]} \n            color=\"green\" \n            position={[0,0,0]}\n            lineWidth={0.3}\n          />\n          <Line \n            points={[[0,0,-50], [0,0,50]]} \n            color=\"blue\" \n            position={[0,0,0]}\n            lineWidth={0.3}\n          />\n\n          {getGridLines()}\n      </mesh>\n    )\n  }\n\n  //Function\n  const readFile = (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.readAsText(e.target.files[0])\n    reader.onload = (e) => {\n      const pointString = e.target.result;\n      const arrStringPoints = pointString.split('\\n');\n      var pointArr = [];\n      for (var i = 0; i < arrStringPoints.length; i++) {\n        pointArr.push(JSON.parse(arrStringPoints[i]));\n      }\n\n      var finalPointsJSX = [];\n      pointArr.map(point => {\n        finalPointsJSX.push(<PointMesh  position={point} size={[0.3,16,16]} color='rgb(255, 0, 0)'/>);\n      })\n      setPointCloud(finalPointsJSX);\n    }\n  }\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"upload-container\">\n        <input type=\"file\" name=\"Input Points\" onChange={(e) => readFile(e)}/>\n      </div>\n\n      <Canvas colorManagement camera={{position: [30,30,30], fov: 100}}>\n        <ambientLight intensity={0.5}/>\n        <pointLight position={[0, 0, 20]} intensity={0.5}/> \n        <directionalLight \n          position={[0,10,0]} \n          intensity={1.5} \n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n          shadow-camera-far={50}\n        />\n\n        {pointCloud}\n\n        <CoordinateGrid />\n\n        <OrbitControls/>\n      </Canvas>\n    </div>\n  )\n}\n\nexport default App;\n","C:\\Users\\adisi\\Desktop\\React-Three-Fiber\\rtf-intro\\src\\reportWebVitals.js",[],["35","36"],"C:\\Users\\adisi\\Desktop\\Georgia Tech\\Spring 2021\\SfM Research\\gtsfm\\rtf_vis_tool\\src\\index.js",[],"C:\\Users\\adisi\\Desktop\\Georgia Tech\\Spring 2021\\SfM Research\\gtsfm\\rtf_vis_tool\\src\\reportWebVitals.js",[],"C:\\Users\\adisi\\Desktop\\Georgia Tech\\Spring 2021\\SfM Research\\gtsfm\\rtf_vis_tool\\src\\App.js",["37","38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":16,"nodeType":"46","messageId":"47","endLine":2,"endColumn":25},{"ruleId":"48","severity":1,"message":"49","line":22,"column":32,"nodeType":"50","messageId":"51","endLine":22,"endColumn":34},{"ruleId":"48","severity":1,"message":"49","line":87,"column":26,"nodeType":"50","messageId":"51","endLine":87,"endColumn":28},{"ruleId":"40","replacedBy":"52"},{"ruleId":"42","replacedBy":"53"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":16,"nodeType":"46","messageId":"47","endLine":2,"endColumn":25},{"ruleId":"48","severity":1,"message":"49","line":22,"column":32,"nodeType":"50","messageId":"51","endLine":22,"endColumn":34},{"ruleId":"48","severity":1,"message":"49","line":112,"column":26,"nodeType":"50","messageId":"51","endLine":112,"endColumn":28},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["54"],["55"],"no-global-assign","no-unsafe-negation"]