name: Benchmark GTSFM on select datasets using SIFT and Deep front-ends

on: [pull_request, workflow_dispatch]

jobs:
  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    strategy:
      # Prevents other configs from being canceled if one of them fails.
      fail-fast: false
      matrix:
        config_dataset_info:
          [
            # config          dataset    lookahead    img-extension  source  loader      max-res  share-intrinsics
            [sift_front_end,  door-12,               12,  JPG,  test_data,  olsson-loader,  1296, true],
            [deep_front_end,  door-12,               12,  JPG,  test_data,  olsson-loader,  1296, true],
            [sift_front_end,  skydio-8,              8,   jpg,  gdrive ,    colmap-loader,  760, true],
            [deep_front_end,  skydio-8,              8,   jpg,  gdrive,     colmap-loader,  760, true],
            [sift_front_end,  skydio-32,             32,  jpg,  gdrive,     colmap-loader,  760, true],
            [deep_front_end,  skydio-32,             32,  jpg,  gdrive,     colmap-loader,  760, true],
            [sift_front_end,  palace-fine-arts-281,  25,  jpg,  wget,       olsson-loader,  320, true],
            [deep_front_end,  notre-dame-20,         20,  jpg,  gdrive,     colmap-loader,  760, false],
            [sift_front_end,  2011205_rc3,           65,  png,  wget,       astronet,       1024, true],
          ]
    defaults:
      run:
        shell: bash -l {0}

    env:
      PYTHON_VERSION: 3.8

    steps:
      - uses: actions/checkout@v2
      - name: Cache conda env
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if environment_linux.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{hashFiles('environment_linux.yml') }}
      - name: Cache frontend
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache
          CACHE_NUMBER: 0
        with:
          path: cache
          key: ${{ matrix.config_dataset_info[0] }}-${{ matrix.config_dataset_info[1] }}-${{ matrix.config_dataset_info[2] }}-${{ matrix.config_dataset_info[6] }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: gtsfm-v1
          environment-file: environment_linux.yml
          python-version: 3.8
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Environment setup
        run: |
          bash .github/scripts/setup.sh
          conda info
      - name: Parse args and prepare dataset, Execute dataset
        run: |
          bash .github/scripts/execute_single_benchmark.sh \
            ${{ matrix.config_dataset_info[0] }} \ # config
            ${{ matrix.config_dataset_info[1] }} \ # dataset
            ${{ matrix.config_dataset_info[2] }} \ # max-frame-lookahead
            ${{ matrix.config_dataset_info[3] }} \ # image extension
            ${{ matrix.config_dataset_info[4] }} \ # dataset source
            ${{ matrix.config_dataset_info[5] }} \ # loader name
            ${{ matrix.config_dataset_info[6] }} \ # max resolution
            ${{ matrix.config_dataset_info[7] }} # share intrinsics

      - name: Archive dataset metrics, plots, and output data (camera poses + points)
        uses: actions/upload-artifact@v2
        with:
          name: results-${{ matrix.config_dataset_info[0] }}-${{ matrix.config_dataset_info[1] }}-${{ matrix.config_dataset_info[2] }}-${{ matrix.config_dataset_info[3] }}-${{ matrix.config_dataset_info[4] }}-${{ matrix.config_dataset_info[5] }}-${{ matrix.config_dataset_info[6] }}-${{ matrix.config_dataset_info[7] }}.zip
          path: |
            result_metrics
            plots
            results